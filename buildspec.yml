version: 0.2

env:
  variables:
    VERSION_NO: "v12.21"
    APP_NAME: "album-store-app"
    AWS_DEFAULT_REGION: "us-east-1"
    IMAGE_REPO_NAME: "angular-album-store-product-page"
    REPOSITORY_URI: ${AWS_ACCOUNT_ID.dkr.ecr.AWS_DEFAULT_REGION.amazonaws.com/IMAGE_REPO_NAME}

phases:
  install:
    commands:
      - aws --version
      - docker --version
      - docker-compose --version
  pre_build:
    commands:
      - echo Logging in to Docker Hub...
      - echo "$DOCKERHUB_PASS" | docker login --username $DOCKERHUB_USER --password-stdin
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | 
      - docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${VERSION_NO:=COMMIT_HASH}
      - echo $REPOSITORY_URI
      - echo $COMMIT_HASH
      - echo $IMAGE_TAG 
  build:
    commands:
      - echo Build started on `date`
      - printenv
      - docker build -t $IMAGE_REPO_NAME .
      - docker images -a
      - echo Building the Docker image...
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - docker images -a
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"topratetransferfrontend","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
